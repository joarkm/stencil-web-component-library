/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SegmentedControl {
        "isSelected": boolean;
        "optionLabel": string;
    }
    interface SegmentedControlGroup {
        "optionLabels": string[];
        "selectedOption": number;
    }
    interface SidebarMenu {
        "placement": 'left' | 'right';
    }
}
declare global {
    interface HTMLSegmentedControlElement extends Components.SegmentedControl, HTMLStencilElement {
    }
    var HTMLSegmentedControlElement: {
        prototype: HTMLSegmentedControlElement;
        new (): HTMLSegmentedControlElement;
    };
    interface HTMLSegmentedControlGroupElement extends Components.SegmentedControlGroup, HTMLStencilElement {
    }
    var HTMLSegmentedControlGroupElement: {
        prototype: HTMLSegmentedControlGroupElement;
        new (): HTMLSegmentedControlGroupElement;
    };
    interface HTMLSidebarMenuElement extends Components.SidebarMenu, HTMLStencilElement {
    }
    var HTMLSidebarMenuElement: {
        prototype: HTMLSidebarMenuElement;
        new (): HTMLSidebarMenuElement;
    };
    interface HTMLElementTagNameMap {
        "segmented-control": HTMLSegmentedControlElement;
        "segmented-control-group": HTMLSegmentedControlGroupElement;
        "sidebar-menu": HTMLSidebarMenuElement;
    }
}
declare namespace LocalJSX {
    interface SegmentedControl {
        "isSelected"?: boolean;
        "onSelected"?: (event: CustomEvent<void>) => void;
        "optionLabel"?: string;
    }
    interface SegmentedControlGroup {
        "onSelected"?: (event: CustomEvent<string>) => void;
        "optionLabels"?: string[];
        "selectedOption"?: number;
    }
    interface SidebarMenu {
        "placement"?: 'left' | 'right';
    }
    interface IntrinsicElements {
        "segmented-control": SegmentedControl;
        "segmented-control-group": SegmentedControlGroup;
        "sidebar-menu": SidebarMenu;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "segmented-control": LocalJSX.SegmentedControl & JSXBase.HTMLAttributes<HTMLSegmentedControlElement>;
            "segmented-control-group": LocalJSX.SegmentedControlGroup & JSXBase.HTMLAttributes<HTMLSegmentedControlGroupElement>;
            "sidebar-menu": LocalJSX.SidebarMenu & JSXBase.HTMLAttributes<HTMLSidebarMenuElement>;
        }
    }
}
